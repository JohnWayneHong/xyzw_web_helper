import{K as h}from"./index-RWkRG8TU.js";class m{constructor(e={}){const{heartbeatInterval:t=2e3,queueInterval:s=50,heartbeatCmd:i="heart_beat",channel:n="x",autoReconnect:o=!0,maxReconnectAttempts:c=5,reconnectDelay:r=3e3}=e;this.heartbeatInterval=t,this.queueInterval=s,this.heartbeatCmd=i,this.channel=n,this.autoReconnect=o,this.maxReconnectAttempts=c,this.reconnectDelay=r,this.ws=null,this.connected=!1,this.connecting=!1,this.reconnectAttempts=0,this.ack=0,this.seq=1,this._heartbeatTimer=null,this._queueTimer=null,this._reconnectTimer=null,this.sendQueue=[],this.waitingPromises=new Map,this.onOpen=()=>{},this.onClose=()=>{},this.onError=()=>{},this.onMessage=()=>{},this.onReconnect=()=>{}}connect(e,t={}){return this.connecting||this.ws&&this.ws.readyState===WebSocket.OPEN?(console.warn("WebSocket已连接或正在连接中"),Promise.resolve()):new Promise((s,i)=>{try{this.connecting=!0,console.log(`🔗 连接WebSocket: ${e}`),this.ws=new WebSocket(e),this.ws.binaryType="arraybuffer",this.ws.onopen=()=>{this.connecting=!1,this.connected=!0,this.reconnectAttempts=0,console.log("✅ WebSocket连接已建立"),this.seq=1,this._startHeartbeat(),this._startQueueProcessor(),this.onOpen(),s()},this.ws.onmessage=n=>{this._handleMessage(n.data)},this.ws.onclose=n=>{this.connecting=!1,this.connected=!1,this._cleanup(),console.log(`🔌 WebSocket连接已关闭: ${n.code} ${n.reason}`),this.onClose(n),this.autoReconnect&&this.reconnectAttempts<this.maxReconnectAttempts&&this._scheduleReconnect(e,t)},this.ws.onerror=n=>{console.error("❌ WebSocket错误:",n),this.onError(n),this.connecting&&(this.connecting=!1,i(n))}}catch(n){this.connecting=!1,i(n)}})}close(e=1e3,t="normal"){this.autoReconnect=!1,this.ws&&this.ws.close(e,t),this._cleanup()}send(e){Array.isArray(e)?this.sendQueue.push(...e):this.sendQueue.push(e)}sendWithPromise(e){const{cmd:t,body:s={},respKey:i,timeout:n=8e3}=e,o=i||`${t}resp`;return new Promise((c,r)=>{const a=setTimeout(()=>{this.waitingPromises.delete(o),r(new Error(`请求超时: ${t}`))},n);this.waitingPromises.set(o,{resolve:c,reject:r,timeoutId:a}),this.send({cmd:t,body:s,respKey:o})})}_handleMessage(e){try{const t=h.parse(e,this.channel);if(!t){console.warn("消息解析失败");return}console.log("📨 收到消息:",t),t.seq&&(this.ack=t.seq);const s=t.cmd||t.c,i=t.respKey||s;if(i&&this.waitingPromises.has(i)){const{resolve:n,timeoutId:o}=this.waitingPromises.get(i);clearTimeout(o),this.waitingPromises.delete(i),n(t);return}this.onMessage(t)}catch(t){console.error("消息处理失败:",t),this.onError(t)}}_startHeartbeat(){this._stopHeartbeat(),this.heartbeatInterval&&(this._heartbeatTimer=setInterval(()=>{var e;this.connected&&((e=this.ws)==null?void 0:e.readyState)===WebSocket.OPEN&&this._sendHeartbeat()},this.heartbeatInterval))}_stopHeartbeat(){this._heartbeatTimer&&(clearInterval(this._heartbeatTimer),this._heartbeatTimer=null)}_sendHeartbeat(){const e={ack:this.ack,body:{},cmd:"_sys/ack",seq:0,time:Date.now()};this._rawSend(e)}_startQueueProcessor(){this._stopQueueProcessor(),this._queueTimer=setInterval(()=>{this._processQueue()},this.queueInterval)}_stopQueueProcessor(){this._queueTimer&&(clearInterval(this._queueTimer),this._queueTimer=null)}_processQueue(){if(!this.connected||!this.ws||this.ws.readyState!==WebSocket.OPEN||this.sendQueue.length===0)return;const e=this.sendQueue.shift(),t=this._buildPacket(e);this._rawSend(t)}_buildPacket(e){const{cmd:t,body:s={},respKey:i}=e;return{ack:this.ack,seq:t===this.heartbeatCmd?0:this.seq++,time:Date.now(),cmd:t,body:s}}_rawSend(e){try{if(e!=null&&e.cmd&&e.cmd!=="_sys/ack"){const s=e.body instanceof Uint8Array||Array.isArray(e.body)?"[BON]":e.body||{};console.info("📤 发送报文",{cmd:e.cmd,ack:e.ack??0,seq:e.seq??0,time:e.time,body:s})}const t=h.encode(e,this.channel);this.ws.send(t)}catch(t){console.error("发送消息失败:",t),this.onError(t)}}_scheduleReconnect(e,t){this._reconnectTimer&&clearTimeout(this._reconnectTimer),this.reconnectAttempts++,console.log(`🔄 计划重连 (${this.reconnectAttempts}/${this.maxReconnectAttempts}) 延迟: ${this.reconnectDelay}ms`),this._reconnectTimer=setTimeout(()=>{console.log(`🔄 开始第${this.reconnectAttempts}次重连...`),this.onReconnect(this.reconnectAttempts),this.connect(e,t).catch(s=>{console.error("重连失败:",s)})},this.reconnectDelay)}_cleanup(){this._stopHeartbeat(),this._stopQueueProcessor(),this._reconnectTimer&&(clearTimeout(this._reconnectTimer),this._reconnectTimer=null);for(const[e,{reject:t,timeoutId:s}]of this.waitingPromises)clearTimeout(s),t(new Error("连接已关闭"));this.waitingPromises.clear()}getStatus(){var e;return{connected:this.connected,connecting:this.connecting,readyState:(e=this.ws)==null?void 0:e.readyState,ack:this.ack,seq:this.seq,queueLength:this.sendQueue.length,waitingPromises:this.waitingPromises.size,reconnectAttempts:this.reconnectAttempts}}static buildUrl(e,t={}){const s=new URL(e);return t.p&&typeof t.p=="object"&&s.searchParams.set("p",JSON.stringify(t.p)),Object.keys(t).forEach(i=>{i!=="p"&&t[i]!==void 0&&s.searchParams.set(i,t[i])}),s.toString()}}export{m as WsAgent,m as default};
